mixin statusBadge(build)
	if build.status === 'in-progress'
		span.label.label-info in progress

	if build.status === 'queued'
		span.label.label-default queued

	if build.status === 'done'
		span.label.label.sm.label-success done

	if build.status === 'error'
		span.label.label-danger error

	if build.status === 'canceled'
		- var canceledBy = this.state.build.canceledBy;
		span.label.label-warning(title="canceled by #{canceledBy.type}") canceled

if this.state.build
	.row
		.col-md-12
			ProjectHeader(project=this.state.project)
	.row
		.col-md-9.col-md-push-3.col-sm-8.col-sm-push-4
			h1.page-header
				.pull-right(style={fontSize: '22px'})
					mixin statusBadge(this.state.build)
				span Build #
				span= this.state.build.number

				.small.text-muted
					- var node = this.state.build.node;
					if node
						| On
						| 
						span= node.type
						| 
						| node
						if node.type !== node.name
							| 
							| "
							span= node.name
							| "
						- var env = this.state.build.env;
						if env
							| , within "
							span= env.name
							| " environment
						| , initiated by
						| 
					else
						| Initiated by
						| 

					- var initiator = this.state.build.initiator;
					if initiator.type === 'build'
						Link(to="project", params={name: initiator.project.name})
							span= initiator.project.name
						| 
						| during the 
						| 
						Link(to="build", params={id: initiator.id})
							span build #
							span= initiator.number
					else
						span= initiator.type

			.build-view_info
				.row
					.col-md-12
						p 
							Scm(scm=this.state.build.project.scm.type)
							| 
							Link(to="project", params={name: this.state.build.project.name})
								span= this.state.build.project.name
				.row
					.col-md-12
						p
							i.fa.fa-calendar
							| 
							if this.state.build.startDate
								span Started 
								DateTime(value=this.state.build.startDate)
							else
								span Queued 
								DateTime(value=this.state.build.createDate)

							if this.state.build.endDate
								- var durationTitle = _(this.state.build.stepTimings).map(function(stepTiming) {
								-	return stepTiming.name + ': ' + (stepTiming.duration / 1000).toFixed(1) + ' sec';
								- }).join('\n');
								| , finished
								| 
								DateTime(value=this.state.build.endDate)
								| 
								i.fa.fa-clock-o
								| 
								| took
								| 
								Duration(value=(this.state.build.endDate - this.state.build.startDate), title=durationTitle)

				- var scm = this.state.build.scm;
				- var rev = scm && scm.rev;
				- var changes = scm && scm.changes;
				- var targetScmRev = this.state.build.project.scm.rev;
				.row
					.col-md-12
						p
							i.fa.fa-code-fork
							| 
							| Scm target is
							| 
							span= targetScmRev
							| ,
							| 
							if changes
								if changes.length
									| changes:
								else
									| no changes, current revision is
									| 
									| "
									RevisionsItem(revision=rev)
									| " by
									| 
									= rev.author
							else if this.state.build.status === 'in-progress'
								| pulling scm changes...
							else
								| changes are not received

				if changes && changes.length
					RevisionsList(revisions=changes)

			//- some wrapper for error block to prevent collapsing of terminal
			div
				if this.state.build.error
					if this.state.build.error.message
						h2
							| Build
							| 
							if this.state.build.currentStep
								| step "
								span= this.state.build.currentStep
								| "
								| 
							| failed with error:
						.alert= this.state.build.error.message

					if this.state.build.error.stderr
						h2 stderr:
						.alert(style="whiteSpace: pre-wrap;")!= ansiUp.ansi_to_html(this.state.build.error.stderr)
				else if this.state.build.status === 'canceled'
					h2
						| Build canceled
						| 
						if this.state.build.currentStep
							| during step "
							span= this.state.build.currentStep
							| "

			.build-view_terminal
				if this.state.showConsole
					h2
						i.fa.fa-terminal
						| 
						| Console output
					Terminal(build=this.state.build.id, showPreloader=true)

					if this.state.build.completed
						if this.state.build.status === 'error'
							.text-center.alert.alert-danger
								| Build ended with error, took
								| 
								Duration(value=(this.state.build.endDate - this.state.build.startDate))
						else if this.state.build.status === 'canceled'
							.text-center.alert.alert-warning
								| Build canceled, took
								| 
								Duration(value=(this.state.build.endDate - this.state.build.startDate))
						else if this.state.build.status === 'done'
							.text-center.alert.alert-success
								| Build successfully completed, took
								|  
								Duration(value=(this.state.build.endDate - this.state.build.startDate))

					.text-center
						button.btn.btn-primary(onClick=this.toggleConsole)
							i.fa.fa-terminal
							| 
							| Hide console output
				else
					.text-center
						button.btn.btn-primary(onClick=this.toggleConsole)
							i.fa.fa-terminal
							| 
							| Show console output

		.col-md-3.col-md-pull-9.col-sm-4.col-sm-pull-8
			BuildSidebar(projectName=this.state.build.project.name, currentBuild=this.state.build)
